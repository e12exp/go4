//
// File generated by /usr/bin/rootcint at Wed Sep 17 15:47:33 2014

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME G__CalifaGo4
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "G__CalifaGo4.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void CalifaParam_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_CalifaParam(void *p = 0);
   static void *newArray_CalifaParam(Long_t size, void *p);
   static void delete_CalifaParam(void *p);
   static void deleteArray_CalifaParam(void *p);
   static void destruct_CalifaParam(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::CalifaParam*)
   {
      ::CalifaParam *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::CalifaParam >(0);
      static ::ROOT::TGenericClassInfo 
         instance("CalifaParam", ::CalifaParam::Class_Version(), "./CalifaParam.h", 25,
                  typeid(::CalifaParam), DefineBehavior(ptr, ptr),
                  &::CalifaParam::Dictionary, isa_proxy, 4,
                  sizeof(::CalifaParam) );
      instance.SetNew(&new_CalifaParam);
      instance.SetNewArray(&newArray_CalifaParam);
      instance.SetDelete(&delete_CalifaParam);
      instance.SetDeleteArray(&deleteArray_CalifaParam);
      instance.SetDestructor(&destruct_CalifaParam);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::CalifaParam*)
   {
      return GenerateInitInstanceLocal((::CalifaParam*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::CalifaParam*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void WrapperProc_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_WrapperProc(void *p);
   static void deleteArray_WrapperProc(void *p);
   static void destruct_WrapperProc(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::WrapperProc*)
   {
      ::WrapperProc *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::WrapperProc >(0);
      static ::ROOT::TGenericClassInfo 
         instance("WrapperProc", ::WrapperProc::Class_Version(), "./WrapperProc.h", 27,
                  typeid(::WrapperProc), DefineBehavior(ptr, ptr),
                  &::WrapperProc::Dictionary, isa_proxy, 4,
                  sizeof(::WrapperProc) );
      instance.SetDelete(&delete_WrapperProc);
      instance.SetDeleteArray(&deleteArray_WrapperProc);
      instance.SetDestructor(&destruct_WrapperProc);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::WrapperProc*)
   {
      return GenerateInitInstanceLocal((::WrapperProc*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::WrapperProc*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *CalifaParam::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *CalifaParam::Class_Name()
{
   return "CalifaParam";
}

//______________________________________________________________________________
const char *CalifaParam::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::CalifaParam*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int CalifaParam::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::CalifaParam*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void CalifaParam::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::CalifaParam*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *CalifaParam::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::CalifaParam*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *WrapperProc::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *WrapperProc::Class_Name()
{
   return "WrapperProc";
}

//______________________________________________________________________________
const char *WrapperProc::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WrapperProc*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int WrapperProc::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WrapperProc*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void WrapperProc::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WrapperProc*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *WrapperProc::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WrapperProc*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void CalifaParam::Streamer(TBuffer &R__b)
{
   // Stream an object of class CalifaParam.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(CalifaParam::Class(),this);
   } else {
      R__b.WriteClassBuffer(CalifaParam::Class(),this);
   }
}

//______________________________________________________________________________
void CalifaParam::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class CalifaParam.
      TClass *R__cl = ::CalifaParam::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fill", &fill);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "frP1", &frP1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "frP2", &frP2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fiNum", &fiNum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fbEnab", &fbEnab);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fdTest", &fdTest);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fsTest", &fsTest);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fcTest", &fcTest);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "flTest", &flTest);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fxInputfile", &fxInputfile);
      R__insp.InspectMember(fxInputfile, "fxInputfile.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fiDataArray[100]", fiDataArray);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fdMeV[5][10]", fdMeV);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fuNum", &fuNum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fdTestarr[5]", fdTestarr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fuShort", &fuShort);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fuChar", &fuChar);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fuLong", &fuLong);
      TGo4Parameter::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_CalifaParam(void *p) {
      return  p ? new(p) ::CalifaParam : new ::CalifaParam;
   }
   static void *newArray_CalifaParam(Long_t nElements, void *p) {
      return p ? new(p) ::CalifaParam[nElements] : new ::CalifaParam[nElements];
   }
   // Wrapper around operator delete
   static void delete_CalifaParam(void *p) {
      delete ((::CalifaParam*)p);
   }
   static void deleteArray_CalifaParam(void *p) {
      delete [] ((::CalifaParam*)p);
   }
   static void destruct_CalifaParam(void *p) {
      typedef ::CalifaParam current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::CalifaParam

//______________________________________________________________________________
void WrapperProc::Streamer(TBuffer &R__b)
{
   // Stream an object of class WrapperProc.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(WrapperProc::Class(),this);
   } else {
      R__b.WriteClassBuffer(WrapperProc::Class(),this);
   }
}

//______________________________________________________________________________
void WrapperProc::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class WrapperProc.
      TClass *R__cl = ::WrapperProc::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*proc", &proc);
      TGo4EventProcessor::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_WrapperProc(void *p) {
      delete ((::WrapperProc*)p);
   }
   static void deleteArray_WrapperProc(void *p) {
      delete [] ((::WrapperProc*)p);
   }
   static void destruct_WrapperProc(void *p) {
      typedef ::WrapperProc current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::WrapperProc

/********************************************************
* G__CalifaGo4.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableG__CalifaGo4();

extern "C" void G__set_cpp_environmentG__CalifaGo4() {
  G__cpp_reset_tagtableG__CalifaGo4();
}
#include <new>
extern "C" int G__cpp_dllrevG__CalifaGo4() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* CalifaParam */
static int G__G__CalifaGo4_186_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CalifaParam* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CalifaParam[n];
     } else {
       p = new((void*) gvp) CalifaParam[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CalifaParam;
     } else {
       p = new((void*) gvp) CalifaParam;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__CalifaGo4LN_CalifaParam));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__CalifaGo4_186_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CalifaParam* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new CalifaParam((const char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) CalifaParam((const char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__CalifaGo4LN_CalifaParam));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__CalifaGo4_186_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) CalifaParam::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__CalifaGo4_186_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CalifaParam::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__CalifaGo4_186_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) CalifaParam::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__CalifaGo4_186_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      CalifaParam::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__CalifaGo4_186_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CalifaParam*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__CalifaGo4_186_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CalifaParam::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__CalifaGo4_186_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CalifaParam::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__CalifaGo4_186_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CalifaParam::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__CalifaGo4_186_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CalifaParam::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__CalifaGo4_186_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   CalifaParam* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new CalifaParam(*(CalifaParam*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__CalifaGo4LN_CalifaParam));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef CalifaParam G__TCalifaParam;
static int G__G__CalifaGo4_186_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (CalifaParam*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((CalifaParam*) (soff+(sizeof(CalifaParam)*i)))->~G__TCalifaParam();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (CalifaParam*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((CalifaParam*) (soff))->~G__TCalifaParam();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__CalifaGo4_186_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CalifaParam* dest = (CalifaParam*) G__getstructoffset();
   *dest = *(CalifaParam*) libp->para[0].ref;
   const CalifaParam& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* WrapperProc */
static int G__G__CalifaGo4_216_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WrapperProc* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new WrapperProc((const char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) WrapperProc((const char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__CalifaGo4LN_WrapperProc));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__CalifaGo4_216_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) WrapperProc::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__CalifaGo4_216_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WrapperProc::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__CalifaGo4_216_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) WrapperProc::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__CalifaGo4_216_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      WrapperProc::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__CalifaGo4_216_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WrapperProc*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__CalifaGo4_216_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WrapperProc::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__CalifaGo4_216_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WrapperProc::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__CalifaGo4_216_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WrapperProc::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__CalifaGo4_216_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WrapperProc::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__CalifaGo4_216_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   WrapperProc* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new WrapperProc(*(WrapperProc*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__CalifaGo4LN_WrapperProc));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef WrapperProc G__TWrapperProc;
static int G__G__CalifaGo4_216_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (WrapperProc*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((WrapperProc*) (soff+(sizeof(WrapperProc)*i)))->~G__TWrapperProc();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (WrapperProc*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((WrapperProc*) (soff))->~G__TWrapperProc();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__CalifaGo4_216_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WrapperProc* dest = (WrapperProc*) G__getstructoffset();
   *dest = *(WrapperProc*) libp->para[0].ref;
   const WrapperProc& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* CalifaParam */

/* WrapperProc */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncG__CalifaGo4 {
 public:
  G__Sizep2memfuncG__CalifaGo4(): p(&G__Sizep2memfuncG__CalifaGo4::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncG__CalifaGo4::*p)();
};

size_t G__get_sizep2memfuncG__CalifaGo4()
{
  G__Sizep2memfuncG__CalifaGo4 a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceG__CalifaGo4() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__CalifaGo4LN_CalifaParam))) {
     CalifaParam *G__Lderived;
     G__Lderived=(CalifaParam*)0x1000;
     {
       TGo4Parameter *G__Lpbase=(TGo4Parameter*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__CalifaGo4LN_CalifaParam),G__get_linked_tagnum(&G__G__CalifaGo4LN_TGo4Parameter),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__CalifaGo4LN_CalifaParam),G__get_linked_tagnum(&G__G__CalifaGo4LN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__CalifaGo4LN_CalifaParam),G__get_linked_tagnum(&G__G__CalifaGo4LN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__CalifaGo4LN_WrapperProc))) {
     WrapperProc *G__Lderived;
     G__Lderived=(WrapperProc*)0x1000;
     {
       TGo4EventProcessor *G__Lpbase=(TGo4EventProcessor*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__CalifaGo4LN_WrapperProc),G__get_linked_tagnum(&G__G__CalifaGo4LN_TGo4EventProcessor),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGo4EventSource *G__Lpbase=(TGo4EventSource*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__CalifaGo4LN_WrapperProc),G__get_linked_tagnum(&G__G__CalifaGo4LN_TGo4EventSource),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__CalifaGo4LN_WrapperProc),G__get_linked_tagnum(&G__G__CalifaGo4LN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__CalifaGo4LN_WrapperProc),G__get_linked_tagnum(&G__G__CalifaGo4LN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableG__CalifaGo4() {

   /* Setting up typedef entry */
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__G__CalifaGo4LN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__CalifaGo4LN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__CalifaGo4LN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__CalifaGo4LN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__CalifaGo4LN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__G__CalifaGo4LN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__CalifaGo4LN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__CalifaGo4LN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__CalifaGo4LN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__CalifaGo4LN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* CalifaParam */
static void G__setup_memvarCalifaParam(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__CalifaGo4LN_CalifaParam));
   { CalifaParam *p; p=(CalifaParam*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fill)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"fill=",0,"control filling");
   G__memvar_setup((void*)((long)(&p->frP1)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"frP1=",0,"control frP1");
   G__memvar_setup((void*)((long)(&p->frP2)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"frP2=",0,"control frP2");
   G__memvar_setup((void*)((long)(&p->fiNum)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fiNum=",0,"control fiNum");
   G__memvar_setup((void*)((long)(&p->fbEnab)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"fbEnab=",0,"control");
   G__memvar_setup((void*)((long)(&p->fdTest)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fdTest=",0,"control");
   G__memvar_setup((void*)((long)(&p->fsTest)-(long)(p)),115,0,0,-1,G__defined_typename("Short_t"),-1,1,"fsTest=",0,"control");
   G__memvar_setup((void*)((long)(&p->fcTest)-(long)(p)),99,0,0,-1,G__defined_typename("Char_t"),-1,1,"fcTest=",0,"control");
   G__memvar_setup((void*)((long)(&p->flTest)-(long)(p)),108,0,0,-1,G__defined_typename("Long_t"),-1,1,"flTest=",0,"control");
   G__memvar_setup((void*)((long)(&p->fxInputfile)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__CalifaGo4LN_TString),-1,-1,1,"fxInputfile=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fiDataArray)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fiDataArray[100]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fdMeV)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fdMeV[5][10]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fuNum)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"fuNum=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fdTestarr)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fdTestarr[5]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fuShort)-(long)(p)),114,0,0,-1,G__defined_typename("UShort_t"),-1,1,"fuShort=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fuChar)-(long)(p)),98,0,0,-1,G__defined_typename("UChar_t"),-1,1,"fuChar=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fuLong)-(long)(p)),107,0,0,-1,G__defined_typename("ULong_t"),-1,1,"fuLong=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__CalifaGo4LN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* WrapperProc */
static void G__setup_memvarWrapperProc(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__CalifaGo4LN_WrapperProc));
   { WrapperProc *p; p=(WrapperProc*)0x1000; if (p) { }
   G__memvar_setup((void*)0,89,0,0,-1,-1,-1,2,"proc=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__CalifaGo4LN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarG__CalifaGo4() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncCalifaParam(void) {
   /* CalifaParam */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__CalifaGo4LN_CalifaParam));
   G__memfunc_setup("CalifaParam",1073,G__G__CalifaGo4_186_0_1, 105, G__get_linked_tagnum(&G__G__CalifaGo4LN_CalifaParam), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalifaParam",1073,G__G__CalifaGo4_186_0_2, 105, G__get_linked_tagnum(&G__G__CalifaGo4LN_CalifaParam), -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintParameter",1454,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"C - 'Text_t' 0 - n i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("UpdateFrom",1015,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'TGo4Parameter' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__CalifaGo4_186_0_5, 85, G__get_linked_tagnum(&G__G__CalifaGo4LN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&CalifaParam::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__CalifaGo4_186_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CalifaParam::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__CalifaGo4_186_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&CalifaParam::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__CalifaGo4_186_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&CalifaParam::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__CalifaGo4LN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__CalifaGo4_186_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__CalifaGo4_186_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CalifaParam::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__CalifaGo4_186_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&CalifaParam::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__CalifaGo4_186_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CalifaParam::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__CalifaGo4_186_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&CalifaParam::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("CalifaParam", 1073, G__G__CalifaGo4_186_0_17, (int) ('i'), G__get_linked_tagnum(&G__G__CalifaGo4LN_CalifaParam), -1, 0, 1, 1, 1, 0, "u 'CalifaParam' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~CalifaParam", 1199, G__G__CalifaGo4_186_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__CalifaGo4_186_0_19, (int) ('u'), G__get_linked_tagnum(&G__G__CalifaGo4LN_CalifaParam), -1, 1, 1, 1, 1, 0, "u 'CalifaParam' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncWrapperProc(void) {
   /* WrapperProc */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__CalifaGo4LN_WrapperProc));
   G__memfunc_setup("WrapperProc",1141,G__G__CalifaGo4_216_0_1, 105, G__get_linked_tagnum(&G__G__CalifaGo4LN_WrapperProc), -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BuildEvent",1010,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'TGo4EventElement' - 0 - target", "event processing function", (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__CalifaGo4_216_0_3, 85, G__get_linked_tagnum(&G__G__CalifaGo4LN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&WrapperProc::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__CalifaGo4_216_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WrapperProc::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__CalifaGo4_216_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&WrapperProc::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__CalifaGo4_216_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&WrapperProc::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__CalifaGo4LN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__CalifaGo4_216_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__CalifaGo4_216_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WrapperProc::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__CalifaGo4_216_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WrapperProc::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__CalifaGo4_216_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WrapperProc::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__CalifaGo4_216_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WrapperProc::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("WrapperProc", 1141, G__G__CalifaGo4_216_0_15, (int) ('i'), G__get_linked_tagnum(&G__G__CalifaGo4LN_WrapperProc), -1, 0, 1, 1, 1, 0, "u 'WrapperProc' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~WrapperProc", 1267, G__G__CalifaGo4_216_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__CalifaGo4_216_0_17, (int) ('u'), G__get_linked_tagnum(&G__G__CalifaGo4LN_WrapperProc), -1, 1, 1, 1, 1, 0, "u 'WrapperProc' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncG__CalifaGo4() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalG__CalifaGo4() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcG__CalifaGo4() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__G__CalifaGo4LN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__G__CalifaGo4LN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__G__CalifaGo4LN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__G__CalifaGo4LN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__G__CalifaGo4LN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__G__CalifaGo4LN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__G__CalifaGo4LN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__G__CalifaGo4LN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__CalifaGo4LN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__G__CalifaGo4LN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__CalifaGo4LN_TGo4Parameter = { "TGo4Parameter" , 99 , -1 };
G__linked_taginfo G__G__CalifaGo4LN_CalifaParam = { "CalifaParam" , 99 , -1 };
G__linked_taginfo G__G__CalifaGo4LN_TGo4EventSource = { "TGo4EventSource" , 99 , -1 };
G__linked_taginfo G__G__CalifaGo4LN_TGo4EventElement = { "TGo4EventElement" , 99 , -1 };
G__linked_taginfo G__G__CalifaGo4LN_TGo4EventProcessor = { "TGo4EventProcessor" , 99 , -1 };
G__linked_taginfo G__G__CalifaGo4LN_WrapperProc = { "WrapperProc" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableG__CalifaGo4() {
  G__G__CalifaGo4LN_TClass.tagnum = -1 ;
  G__G__CalifaGo4LN_TBuffer.tagnum = -1 ;
  G__G__CalifaGo4LN_TMemberInspector.tagnum = -1 ;
  G__G__CalifaGo4LN_TObject.tagnum = -1 ;
  G__G__CalifaGo4LN_TNamed.tagnum = -1 ;
  G__G__CalifaGo4LN_TString.tagnum = -1 ;
  G__G__CalifaGo4LN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__G__CalifaGo4LN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__CalifaGo4LN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__G__CalifaGo4LN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__CalifaGo4LN_TGo4Parameter.tagnum = -1 ;
  G__G__CalifaGo4LN_CalifaParam.tagnum = -1 ;
  G__G__CalifaGo4LN_TGo4EventSource.tagnum = -1 ;
  G__G__CalifaGo4LN_TGo4EventElement.tagnum = -1 ;
  G__G__CalifaGo4LN_TGo4EventProcessor.tagnum = -1 ;
  G__G__CalifaGo4LN_WrapperProc.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableG__CalifaGo4() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__G__CalifaGo4LN_TClass);
   G__get_linked_tagnum_fwd(&G__G__CalifaGo4LN_TBuffer);
   G__get_linked_tagnum_fwd(&G__G__CalifaGo4LN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__G__CalifaGo4LN_TObject);
   G__get_linked_tagnum_fwd(&G__G__CalifaGo4LN_TNamed);
   G__get_linked_tagnum_fwd(&G__G__CalifaGo4LN_TString);
   G__get_linked_tagnum_fwd(&G__G__CalifaGo4LN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__G__CalifaGo4LN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__CalifaGo4LN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__CalifaGo4LN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__CalifaGo4LN_TGo4Parameter);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__CalifaGo4LN_CalifaParam),sizeof(CalifaParam),-1,324864,(char*)NULL,G__setup_memvarCalifaParam,G__setup_memfuncCalifaParam);
   G__get_linked_tagnum_fwd(&G__G__CalifaGo4LN_TGo4EventSource);
   G__get_linked_tagnum_fwd(&G__G__CalifaGo4LN_TGo4EventElement);
   G__get_linked_tagnum_fwd(&G__G__CalifaGo4LN_TGo4EventProcessor);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__CalifaGo4LN_WrapperProc),sizeof(WrapperProc),-1,324608,(char*)NULL,G__setup_memvarWrapperProc,G__setup_memfuncWrapperProc);
}
extern "C" void G__cpp_setupG__CalifaGo4(void) {
  G__check_setup_version(30051515,"G__cpp_setupG__CalifaGo4()");
  G__set_cpp_environmentG__CalifaGo4();
  G__cpp_setup_tagtableG__CalifaGo4();

  G__cpp_setup_inheritanceG__CalifaGo4();

  G__cpp_setup_typetableG__CalifaGo4();

  G__cpp_setup_memvarG__CalifaGo4();

  G__cpp_setup_memfuncG__CalifaGo4();
  G__cpp_setup_globalG__CalifaGo4();
  G__cpp_setup_funcG__CalifaGo4();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncG__CalifaGo4();
  return;
}
class G__cpp_setup_initG__CalifaGo4 {
  public:
    G__cpp_setup_initG__CalifaGo4() { G__add_setup_func("G__CalifaGo4",(G__incsetup)(&G__cpp_setupG__CalifaGo4)); G__call_setup_funcs(); }
   ~G__cpp_setup_initG__CalifaGo4() { G__remove_setup_func("G__CalifaGo4"); }
};
G__cpp_setup_initG__CalifaGo4 G__cpp_setup_initializerG__CalifaGo4;

